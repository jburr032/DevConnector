{"ast":null,"code":"var _jsxFileName = \"/Users/joshburrill/Desktop/MERN/DevConnector/client/src/components/profile/Profile.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById, getProfiles } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/joshburrill/Desktop/MERN/DevConnector/client/src/components/profile/Profile.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getProfileById","getProfiles","Link","Profile","match","profile","loading","params","id","auth","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,uBAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA,cAAT;AAAyBK,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAlC,CAAD,KAA8D;AAC5EV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACI,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACR,cAAD,CAFM,CAAT;AAGA,sBACE,0CACGK,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,uDACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGG,IAAI,CAACC,eAAL,IACCD,IAAI,CAACH,OAAL,KAAiB,KADlB,IAECG,IAAI,CAACE,IAAL,CAAUC,GAAV,KAAkBP,OAAO,CAACM,IAAR,CAAaC,GAFhC,iBAGG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPN,CAJJ,CADF;AAoBD,CAxBD;;AA0BAT,OAAO,CAACU,SAAR,GAAoB;AAClBb,EAAAA,cAAc,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADb;AAElBV,EAAAA,OAAO,EAAER,SAAS,CAACmB,MAAV,CAAiBD,UAFR;AAGlBN,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADmB;AAElCI,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFsB,CAAZ,CAAxB;;AAKA,eAAeX,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA6CG,OAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById, getProfiles } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({ match, getProfileById, profile: { profile, loading } }) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return (\n    <>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n        </>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}