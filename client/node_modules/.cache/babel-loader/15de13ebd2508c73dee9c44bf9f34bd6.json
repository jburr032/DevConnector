{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  laoding: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.postId ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joshburrill/Desktop/MERN/DevConnector/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","initialState","posts","post","laoding","error","state","action","type","payload","loading","filter","_id","map","postId","likes"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,QALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKZ,SAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,QAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFF;AAGLQ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACS,GAAL,KAAaH,OAA1C,CAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKb,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKZ,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYW,GAAZ,CAAiBV,IAAD,IACrBA,IAAI,CAACS,GAAL,KAAaH,OAAO,CAACK,MAArB,GAA8B,EAAE,GAAGX,IAAL;AAAWY,UAAAA,KAAK,EAAEN,OAAO,CAACM;AAA1B,SAA9B,GAAkEZ,IAD7D,CAFF;AAKLO,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF;AACE,aAAOJ,KAAP;AAlCJ;AAoCD","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  laoding: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}