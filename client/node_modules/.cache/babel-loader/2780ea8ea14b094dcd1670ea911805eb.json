{"ast":null,"code":"var _jsxFileName = \"/Users/joshburrill/Desktop/MERN/DevConnector/client/src/components/profile/ProfileGithub.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  })\n  /*<div class='profile-github'>\n    <h2 class='text-primary my-1'>\n      <i class='fab fa-github'></i> Github Repos\n    </h2>\n        {repos &&\n      repos.map((repo, i) => (\n        <div class='repo bg-white p-1 my-1'>\n          <div>\n            <h4>\n              <a href='#' target='_blank' rel='noopener noreferrer'>\n                {repo.full_name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li class='badge badge-primary'>\n                Stars: {repo.stargazers_count}\n              </li>\n              <li class='badge badge-dark'>\n                Watchers: {repo.watchers_count}\n              </li>\n              <li class='badge badge-light'>Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n  </div>*/\n  ;\n};\n\nProfileGithub.propTypes = {\n  repos: PropTypes.object.isRequired,\n  getGithubRepos: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.proifle.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/joshburrill/Desktop/MERN/DevConnector/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","propTypes","object","isRequired","func","mapStateToProps","state","proifle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,cAAZ;AAA4BI,EAAAA;AAA5B,CAAD,KAAyC;AAC7DP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACD,GAFQ,EAEN,CAACH,cAAD,EAAiBG,QAAjB,CAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFF;AAkCD,CAvCD;;AAyCAD,aAAa,CAACG,SAAd,GAA0B;AACxBD,EAAAA,KAAK,EAAEN,SAAS,CAACQ,MAAV,CAAiBC,UADA;AAExBP,EAAAA,cAAc,EAAEF,SAAS,CAACU,IAAV,CAAeD;AAFP,CAA1B;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,KAAK,EAAEM,KAAK,CAACC,OAAN,CAAcP;AADa,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n\n  return (\n    <div></div>\n    /*<div class='profile-github'>\n      <h2 class='text-primary my-1'>\n        <i class='fab fa-github'></i> Github Repos\n      </h2>\n  \n\n      {repos &&\n        repos.map((repo, i) => (\n          <div class='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a href='#' target='_blank' rel='noopener noreferrer'>\n                  {repo.full_name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li class='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li class='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li class='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))}\n    </div>*/\n  );\n};\n\nProfileGithub.propTypes = {\n  repos: PropTypes.object.isRequired,\n  getGithubRepos: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.proifle.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}