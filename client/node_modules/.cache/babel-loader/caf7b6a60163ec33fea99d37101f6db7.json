{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERR } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\"; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    axios.defaults.headers.common[\"x-auth-token\"];\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n\n  localStorage.token;\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joshburrill/Desktop/MERN/DevConnector/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","defaults","headers","common","res","get","type","payload","data","err","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,QAJF,QAKO,SALP;AAMA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBV,IAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B;AACD,GAFD,MAEO;AACL,WAAOb,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,CAAP;AACD;;AACDJ,EAAAA,YAAY,CAACC,KAAb;;AAEA,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,WAAV,CAAlB;AAEAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,WADC;AAEPc,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGD;AACF,CApBM,C,CAsBP;;AACA,OAAO,MAAMgB,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOf,QAAP,IAAoB;AACzE,QAAMgB,MAAM,GAAG;AACbZ,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMa,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMd,KAAK,CAAC4B,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BD,MAA/B,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEf,gBADC;AAEPgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMU,MAAM,GAAGV,GAAG,CAACW,QAAJ,CAAaZ,IAAb,CAAkBW,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWxB,QAAQ,CAACH,QAAQ,CAAC2B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDzB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD;AACF,CA3BM","sourcesContent":["import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERR,\n} from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    axios.defaults.headers.common[\"x-auth-token\"];\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n  localStorage.token;\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}